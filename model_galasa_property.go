/*
Galasa Ecosystem API

The Galasa Ecosystem REST API allows you to interact with a Galasa Ecosystem.

API version: 0.37.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package galasaapi

import (
	"encoding/json"
)

// checks if the GalasaProperty type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GalasaProperty{}

// GalasaProperty struct for GalasaProperty
type GalasaProperty struct {
	ApiVersion *string `json:"apiVersion,omitempty"`
	Kind *string `json:"kind,omitempty"`
	Metadata *GalasaPropertyMetadata `json:"metadata,omitempty"`
	Data *GalasaPropertyData `json:"data,omitempty"`
}

// NewGalasaProperty instantiates a new GalasaProperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGalasaProperty() *GalasaProperty {
	this := GalasaProperty{}
	return &this
}

// NewGalasaPropertyWithDefaults instantiates a new GalasaProperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGalasaPropertyWithDefaults() *GalasaProperty {
	this := GalasaProperty{}
	return &this
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *GalasaProperty) GetApiVersion() string {
	if o == nil || IsNil(o.ApiVersion) {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GalasaProperty) GetApiVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ApiVersion) {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *GalasaProperty) HasApiVersion() bool {
	if o != nil && !IsNil(o.ApiVersion) {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *GalasaProperty) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *GalasaProperty) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GalasaProperty) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *GalasaProperty) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *GalasaProperty) SetKind(v string) {
	o.Kind = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *GalasaProperty) GetMetadata() GalasaPropertyMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret GalasaPropertyMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GalasaProperty) GetMetadataOk() (*GalasaPropertyMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *GalasaProperty) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given GalasaPropertyMetadata and assigns it to the Metadata field.
func (o *GalasaProperty) SetMetadata(v GalasaPropertyMetadata) {
	o.Metadata = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GalasaProperty) GetData() GalasaPropertyData {
	if o == nil || IsNil(o.Data) {
		var ret GalasaPropertyData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GalasaProperty) GetDataOk() (*GalasaPropertyData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GalasaProperty) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given GalasaPropertyData and assigns it to the Data field.
func (o *GalasaProperty) SetData(v GalasaPropertyData) {
	o.Data = &v
}

func (o GalasaProperty) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GalasaProperty) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiVersion) {
		toSerialize["apiVersion"] = o.ApiVersion
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableGalasaProperty struct {
	value *GalasaProperty
	isSet bool
}

func (v NullableGalasaProperty) Get() *GalasaProperty {
	return v.value
}

func (v *NullableGalasaProperty) Set(val *GalasaProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableGalasaProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableGalasaProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGalasaProperty(val *GalasaProperty) *NullableGalasaProperty {
	return &NullableGalasaProperty{value: val, isSet: true}
}

func (v NullableGalasaProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGalasaProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


