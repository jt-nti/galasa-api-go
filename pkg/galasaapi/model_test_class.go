/*
Galasa Ecosystem API

The Galasa Ecosystem REST API allows you to interact with a Galasa Ecosystem.

API version: 0.37.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pkg/galasaapi

import (
	"encoding/json"
)

// checks if the TestClass type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestClass{}

// TestClass struct for TestClass
type TestClass struct {
	Testclass *string `json:"testclass,omitempty"`
	Bundle *string `json:"bundle,omitempty"`
}

// NewTestClass instantiates a new TestClass object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestClass() *TestClass {
	this := TestClass{}
	return &this
}

// NewTestClassWithDefaults instantiates a new TestClass object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestClassWithDefaults() *TestClass {
	this := TestClass{}
	return &this
}

// GetTestclass returns the Testclass field value if set, zero value otherwise.
func (o *TestClass) GetTestclass() string {
	if o == nil || IsNil(o.Testclass) {
		var ret string
		return ret
	}
	return *o.Testclass
}

// GetTestclassOk returns a tuple with the Testclass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestClass) GetTestclassOk() (*string, bool) {
	if o == nil || IsNil(o.Testclass) {
		return nil, false
	}
	return o.Testclass, true
}

// HasTestclass returns a boolean if a field has been set.
func (o *TestClass) HasTestclass() bool {
	if o != nil && !IsNil(o.Testclass) {
		return true
	}

	return false
}

// SetTestclass gets a reference to the given string and assigns it to the Testclass field.
func (o *TestClass) SetTestclass(v string) {
	o.Testclass = &v
}

// GetBundle returns the Bundle field value if set, zero value otherwise.
func (o *TestClass) GetBundle() string {
	if o == nil || IsNil(o.Bundle) {
		var ret string
		return ret
	}
	return *o.Bundle
}

// GetBundleOk returns a tuple with the Bundle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestClass) GetBundleOk() (*string, bool) {
	if o == nil || IsNil(o.Bundle) {
		return nil, false
	}
	return o.Bundle, true
}

// HasBundle returns a boolean if a field has been set.
func (o *TestClass) HasBundle() bool {
	if o != nil && !IsNil(o.Bundle) {
		return true
	}

	return false
}

// SetBundle gets a reference to the given string and assigns it to the Bundle field.
func (o *TestClass) SetBundle(v string) {
	o.Bundle = &v
}

func (o TestClass) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestClass) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Testclass) {
		toSerialize["testclass"] = o.Testclass
	}
	if !IsNil(o.Bundle) {
		toSerialize["bundle"] = o.Bundle
	}
	return toSerialize, nil
}

type NullableTestClass struct {
	value *TestClass
	isSet bool
}

func (v NullableTestClass) Get() *TestClass {
	return v.value
}

func (v *NullableTestClass) Set(val *TestClass) {
	v.value = val
	v.isSet = true
}

func (v NullableTestClass) IsSet() bool {
	return v.isSet
}

func (v *NullableTestClass) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestClass(val *TestClass) *NullableTestClass {
	return &NullableTestClass{value: val, isSet: true}
}

func (v NullableTestClass) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestClass) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


