/*
Galasa Ecosystem API

The Galasa Ecosystem REST API allows you to interact with a Galasa Ecosystem.

API version: 0.37.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pkg/galasaapi

import (
	"encoding/json"
)

// checks if the DexClient type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DexClient{}

// DexClient struct for DexClient
type DexClient struct {
	// An alphanumeric string representing the ID of the Dex client.
	ClientId *string `json:"client_id,omitempty"`
}

// NewDexClient instantiates a new DexClient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDexClient() *DexClient {
	this := DexClient{}
	return &this
}

// NewDexClientWithDefaults instantiates a new DexClient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDexClientWithDefaults() *DexClient {
	this := DexClient{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *DexClient) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DexClient) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *DexClient) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *DexClient) SetClientId(v string) {
	o.ClientId = &v
}

func (o DexClient) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DexClient) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientId) {
		toSerialize["client_id"] = o.ClientId
	}
	return toSerialize, nil
}

type NullableDexClient struct {
	value *DexClient
	isSet bool
}

func (v NullableDexClient) Get() *DexClient {
	return v.value
}

func (v *NullableDexClient) Set(val *DexClient) {
	v.value = val
	v.isSet = true
}

func (v NullableDexClient) IsSet() bool {
	return v.isSet
}

func (v *NullableDexClient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDexClient(val *DexClient) *NullableDexClient {
	return &NullableDexClient{value: val, isSet: true}
}

func (v NullableDexClient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDexClient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


