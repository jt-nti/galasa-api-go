/*
Galasa Ecosystem API

The Galasa Ecosystem REST API allows you to interact with a Galasa Ecosystem.

API version: 0.37.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pkg/galasaapi

import (
	"encoding/json"
	"fmt"
)


// ResourcesDataInner struct for ResourcesDataInner
type ResourcesDataInner struct {
	GalasaProperty *GalasaProperty
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *ResourcesDataInner) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into GalasaProperty
	err = json.Unmarshal(data, &dst.GalasaProperty);
	if err == nil {
		jsonGalasaProperty, _ := json.Marshal(dst.GalasaProperty)
		if string(jsonGalasaProperty) == "{}" { // empty struct
			dst.GalasaProperty = nil
		} else {
			return nil // data stored in dst.GalasaProperty, return on the first match
		}
	} else {
		dst.GalasaProperty = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(ResourcesDataInner)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *ResourcesDataInner) MarshalJSON() ([]byte, error) {
	if src.GalasaProperty != nil {
		return json.Marshal(&src.GalasaProperty)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableResourcesDataInner struct {
	value *ResourcesDataInner
	isSet bool
}

func (v NullableResourcesDataInner) Get() *ResourcesDataInner {
	return v.value
}

func (v *NullableResourcesDataInner) Set(val *ResourcesDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableResourcesDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableResourcesDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourcesDataInner(val *ResourcesDataInner) *NullableResourcesDataInner {
	return &NullableResourcesDataInner{value: val, isSet: true}
}

func (v NullableResourcesDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourcesDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


